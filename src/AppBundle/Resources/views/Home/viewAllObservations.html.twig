{% extends "AppBundle::layout.html.twig" %}
{% block stylesheets %}
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    {{ parent() }}

{% endblock %}
{% block body %}
	{% block heading %} {{ parent() }} {% endblock %}
	<div id="selection" class="call">
        <h2>sélectionner l'espèce à afficher</h2>
        <input id="observation_bird" size="53"/><button class="addSpecies">Ajouter</button>

	</div> 
	<div class="debug"></div>
    <div id="map"></div>
    {% for bird in birds %}
    {{bird.id }}, {{bird.comment }}
    {% endfor %}



{% endblock %}
{% block footer %}{{ parent() }}{% endblock  %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://npmcdn.com/leaflet@1.0.0-rc.3/dist/leaflet.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
        <script>
    /** localize autocomplete **/
    // live region extension, adding a `messages` option
// NOTE: This is an experimental API. We are still investigating
// a full solution for string manipulation and internationalization.
(function( $, undefined ) {
$.widget( "ui.autocomplete", $.ui.autocomplete, {
	options: {
		messages: {
			noResults: "Pas de résultats.",
			results: function( amount ) {
				return amount + ( amount > 1 ? " résultats sont" : " résultat est" ) +
					" disponible, utilisez les touches haut et bas pour naviguez.";
			}
		}
	},

	__response: function( content ) {
		var message;
		this._superApply( arguments );
		if ( this.options.disabled || this.cancelSearch ) {
			return;
		}
		if ( content && content.length ) {
			message = this.options.messages.results( content.length );
		} else {
			message = this.options.messages.noResults;
		}
		this.liveRegion.text( message );
	}
});

}( jQuery ));
    </script>
    <script>
    
    function valInCache(val,objt)
{
	for (var property in objt) {
	
    		for (var prop in objt[property]) {
        		this_val = objt[property][prop];
        		console.log(this_val);
        		if(this_val === val)
        		{
            		return true;
            		break;
        		}
			}
	}
    return false;
}
        (function($) {
        $observation_bird = $('#observation_bird');
        
        function initMap(position){
            var map = L.map('map').setView([position.coords.latitude, position.coords.longitude], 15);

            var marker = L.marker([position.coords.latitude, position.coords.longitude]).addTo(map);

            // create the tile layer with correct attribution
            var tuileUrl = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';

            var attrib='Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';

            var osm = L.tileLayer(tuileUrl, {
                minZoom: 8,
                maxZoom: 17,
                attribution: attrib
            });

            var popup = L.popup();
			osm.addTo(map);
		}
        
        var cache = {};
        $observation_bird.autocomplete({
            	minLength: 2,
                source : function(request, response){
                    var motcle = $observation_bird.val();
                    var data = 'motcle=' + motcle;
                    var term = request.term;
        			if ( term in cache ) {
          				response( cache[ term ] );
          				return;
        			}

                    $.ajax({
                        type:"POST",
                        url : "{{ path('nao_app_ajax_bird') }}",
                        dataType : 'json',
                        data : data,

                        success : function(data){
                        	cache[ term ] = data;
                            response($.map(data, function(object){
                                return object;
                            }));
                        }
                    });
                }
        });
            
             if(navigator.geolocation){
                navigator.geolocation.getCurrentPosition(initMap);
            }
                
            $('#observation_bird').val('');
            
            $(".addSpecises").on("click", function(){
            var speciesToAdd = $('#observation_bird').val();
            $(".debug").append(speciesToAdd);
            data = "bird=" + speciesToAdd.replace(/ /gi,"%20");
            $.ajax({
  				method: "POST",
  				url: "{{ path('nao_app_get_observations_by_bird') }}",
  				data: data,
  				cache: false
			})
  			.done(function( response ) {
   				console.log("resultats :" + response);
   				
   				
   				
   				
  			});
            
            });
        })(jQuery);

       
    </script>
{% endblock %}