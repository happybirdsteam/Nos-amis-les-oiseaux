{% extends "AppBundle::layout.html.twig" %}
{% block stylesheets %}
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    {{ parent() }}

{% endblock %}
{% block body %}
	{% block heading %} {{ parent() }} {% endblock %}
	<div id="selection" class="call">
        <h2>sélectionner l'espèce à afficher</h2>
        <input id="observation_bird" size="53"/><button class="addSpecies">Ajouter</button>

	</div> 
	<div class="debug"></div>
    <div id="map"></div>
    {% for bird in birds %}
    {{bird.id }}, {{bird.comment }}
    {% endfor %}



{% endblock %}
{% block footer %}{{ parent() }}{% endblock  %}

{% block javascripts %}
    {{ parent() }}

    <script src="https://npmcdn.com/leaflet@1.0.0-rc.3/dist/leaflet.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
    <script>
        (function($) {


            /** localize autocomplete **/
            // live region extension, adding a `messages` option
// NOTE: This is an experimental API. We are still investigating
// a full solution for string manipulation and internationalization.
            (function( $, undefined ) {
                $.widget( "ui.autocomplete", $.ui.autocomplete, {
                    options: {
                        messages: {
                            noResults: "Pas de résultats.",
                            results: function( amount ) {
                                return amount + ( amount > 1 ? " résultats sont" : " résultat est" ) +
                                        " disponible, utilisez les touches haut et bas pour naviguer.";
                            }
                        }
                    },

                    __response: function( content ) {
                        var message;
                        this._superApply( arguments );
                        if ( this.options.disabled || this.cancelSearch ) {
                            return;
                        }
                        if ( content && content.length ) {
                            message = this.options.messages.results( content.length );
                        } else {
                            message = this.options.messages.noResults;
                        }
                        this.liveRegion.text( message );
                    }
                });

            }( jQuery ));





        $observation_bird = $('#observation_bird');


            //init map in globally scope
            var map = new L.Map('map');
            var markers = new L.FeatureGroup();
            function removeAllMarkers(){
                map.removeLayer(markers);
            };

            function initMap(lat, lng, typeOfBird){

                map.setView([lat,lng], 7);
                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                var marker = L.marker([lat, lng]);
                marker.bindPopup( typeOfBird )
                        .openPopup();
                markers.addLayer(marker);
                map.addLayer(markers);
            };

            $(".clean").on("click", function(){
                removeAllMarkers();
            });


         var fillMap = function(items){
             var l = items.length;
             for (var i=0; i<l; i++){

                 initMap(items[i].lat, items[i].lng, items[i].bird.lbNom);
             }

         }

        var cache = {};
        $observation_bird.autocomplete({
            	minLength: 2,
                source : function(request, response){
                    var motcle = $observation_bird.val();
                    var data = 'motcle=' + motcle;
                    var term = request.term;
        			if ( term in cache ) {
          				response( cache[ term ] );
          				return;
        			}

                    $.ajax({
                        type:"POST",
                        url : "{{ path('nao_app_ajax_bird') }}",
                        dataType : 'json',
                        data : data,

                        success : function(data){
                        	cache[ term ] = data;
                            response($.map(data, function(object){
                                return object;
                            }));
                        }
                    });
                }
        });

                
            $observation_bird.val('');
            
            $(".addSpecies").on("click", function(){
            var speciesToAdd = $observation_bird.val();
            $(".debug").append(speciesToAdd);
            data = "bird=" + speciesToAdd.replace(/ /gi,"%20");
            $.ajax({
  				method: "POST",
  				url: "{{ path('nao_app_get_observations_by_bird') }}",
  				data: data,
  				cache: false
			})
  			.done(function( response ) {
                fillMap(response);
   				console.log("résultats :" + JSON.stringify(response));
            })
                    .error(function(){console.log("error")});
            
            });
        })(jQuery)
    </script>
{% endblock %}