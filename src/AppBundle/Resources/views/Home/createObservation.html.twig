{% extends "AppBundle::layout.html.twig" %}
{% block title %} {{ parent() }} {% endblock %}
{% block stylesheets %} {{ parent() }} {% endblock %}
    {% block body %}
        {% block heading %} {{ parent() }} {% endblock %}
    {% block container %}
        {% for flash_message in app.session.flashBag.get('info') %}
            <div class="flash-notice alert alert-info">
              <p>{{ flash_message }}</p>
            </div>
        {% endfor %}
        <div class="call">
        <h2>Soumettre une observation</h2>
        <p>Soumettre une de vos observations, en remplissant le formulaire ci-dessous</p>
            </div>
    <div id="mapid"></div>
        {% form_theme form _self %}
    {{ form_start(form, {'attr':{'id':'form_add_observ'}})}}

    {{ form_widget(form) }}

    {{ form_end(form) }}
    </div>
    {%  endblock %}
{% endblock %}
{% block footer %} {{ parent() }} {% endblock %}

{% block javascripts %}
    {{ parent() }}
     <script src="//unpkg.com/leaflet@1.0.0-rc.3/dist/leaflet.js"></script>
    <script src="//code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
    <script>
        (function( $, undefined ) {
            $.widget( "ui.autocomplete", $.ui.autocomplete, {
                options: {
                    messages: {
                        noResults: "Pas de résultats.",
                        results: function( amount ) {
                            return amount + ( amount > 1 ? " résultats sont" : " résultat est" ) +
                                    " disponible, utilisez les touches haut et bas pour naviguer.";
                        }
                    }
                },

                __response: function( content ) {
                    var message;
                    this._superApply( arguments );
                    if ( this.options.disabled || this.cancelSearch ) {
                        return;
                    }
                    if ( content && content.length ) {
                        message = this.options.messages.results( content.length );
                    } else {
                        message = this.options.messages.noResults;
                    }
                    this.liveRegion.text( message );
                }
            });

        }( jQuery ));

        (function($) {
        
        $observation_bird = $('#observation_bird');
        $form_add_observ = $("#form_add_observ");
            //flash
            $(".flash-notice, .flash-notice>p").on("click", function(){
                $(".flash-notice").hide();
            });
        
        function initMap(position){
            var map = L.map('mapid').setView([position.coords.latitude, position.coords.longitude], 15);

            var marker = L.marker([position.coords.latitude, position.coords.longitude]).addTo(map);

            // create the tile layer with correct attribution
            var tuileUrl = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';

            var attrib='Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';

            var osm = L.tileLayer(tuileUrl, {
                minZoom: 8,
                maxZoom: 17,
                attribution: attrib
            });

            var popup = L.popup();

            function onClickAddMarker(e){
            	var ll = e.latlng;
            	popup
                        .setLatLng(ll)
                        .setContent("Vous avez placé un marqueur à la position "+ e.latlng.toString())
                        .openOn(map);
                marker
                        .setLatLng(ll)
                        .update();
                $('#observation_lat').val(ll.lat);
                $('#observation_lng').val(ll.lng);
            }

            osm.addTo(map);

            map.on('click', onClickAddMarker);
        };
        
        var cache = {};
        $observation_bird.autocomplete({
            	minLength: 2,
                source : function(request, response){
                    var motcle = $observation_bird.val();
                    var data = 'motcle=' + motcle;
                    var term = request.term;
        			if ( term in cache ) {
          				response( cache[ term ] );
          				return;
        			}

                    $.ajax({
                        type:"POST",
                        url : "{{ path('nao_app_ajax_bird') }}",
                        dataType : 'json',
                        data : data,

                        success : function(data){
                        	cache[ term ] = data;
                            response($.map(data, function(object){
                                return object;
                            }));
                        }
                    });
                }
        });
            
        if(navigator.geolocation){
                navigator.geolocation.getCurrentPosition(initMap);
        }
                
        $observation_bird.val('');
         
           
        $("#observation_save").on("click", function( e ) {
            
        	e.preventDefault();
            if( valInCache( $observation_bird.val(), cache ) && $form_add_observ.get()[0].checkValidity())
            {
            	$form_add_observ.submit();
            	console.log( valInCache( $observation_bird.val(), cache ) );
            	} else {
            	// in modal check the error

            	
            }
        });
        
            
        })(jQuery);

       
    </script>
{% endblock %}